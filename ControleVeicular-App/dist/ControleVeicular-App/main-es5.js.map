{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/auth/auth.guard.ts","webpack:///src/app/auth/auth.interceptor.ts","webpack:///src/app/components/advertisements/advertisements.component.ts","webpack:///src/app/components/advertisements/advertisements.component.html","webpack:///src/app/components/brands/brands.component.ts","webpack:///src/app/components/brands/brands.component.html","webpack:///src/app/components/user/login/login.component.ts","webpack:///src/app/components/user/login/login.component.html","webpack:///src/app/components/user/registration/registration.component.ts","webpack:///src/app/components/user/registration/registration.component.html","webpack:///src/app/components/user/user.component.ts","webpack:///src/app/components/user/user.component.html","webpack:///src/app/components/vehicles/vehicles.component.ts","webpack:///src/app/components/vehicles/vehicles.component.html","webpack:///src/app/header/header.component.ts","webpack:///src/app/header/header.component.html","webpack:///src/app/services/advertisement.service.ts","webpack:///src/app/services/auth.service.ts","webpack:///src/app/services/brand.service.ts","webpack:///src/app/services/vehicle.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","children","canActivate","AppRoutingModule","forRoot","imports","AppComponent","title","isAdmin","selector","templateUrl","styleUrls","AppModule","provide","useClass","multi","declarations","providers","bootstrap","AuthGuard","router","next","state","localStorage","getItem","navigate","providedIn","AuthInterceptor","cloneReq","clone","headers","set","handle","pipe","succ","err","status","navigateByUrl","AdvertisementsComponent","advertisementService","vehicleService","fb","toastr","getAdvertisements","getVehicles","validation","getAllVehicles","subscribe","vehicles","console","log","error","getAllAdvertisements","advertisements","template","advertisement","newRecord","registerForm","reset","show","patchValue","hide","group","modelYear","required","minLength","min","max","fabricationYear","color","fuelType","transmissionType","driveTrain","sellDate","buyPrice","sellPrice","vehicleId","valid","Object","assign","value","postAdvertisement","newAdvertisement","success","putAdvertisement","deleteAdvertisement","result","vehicle","find","locate","modelName","modelSpecification","openModal","closeModal","salvarAlteracao","BrandsComponent","brandService","getBrands","getAllBrands","brands","brand","nome","pais","postBrand","newBrand","putBrand","deleteBrand","LoginComponent","authService","titulo","model","login","RegistrationComponent","email","userName","passwords","password","confirmPassword","validator","compararSenhas","confirmSenhaCtrl","get","errors","setErrors","mismatch","user","register","erro","forEach","element","cadastrarUsuario","UserComponent","VehiclesComponent","bodytype","engineDisplacement","engineSpecification","brandId","postVehicle","newVehicle","putVehicle","deleteVehicle","HeaderComponent","loggedIn","removeItem","AdvertisementService","http","baseUrl","post","put","AuthService","baseURL","jwtHelper","response","setItem","token","decodedToken","decodeToken","sessionStorage","unique_name","isTokenExpired","BrandService","VehicleService","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { BrandsComponent } from './components/brands/brands.component';\nimport { VehiclesComponent } from './components/vehicles/vehicles.component';\nimport { AdvertisementsComponent } from './components/advertisements/advertisements.component';\nimport { UserComponent } from './components/user/user.component';\nimport { RegistrationComponent } from './components/user/registration/registration.component';\nimport { LoginComponent } from './components/user/login/login.component';\nimport { AuthGuard } from './auth/auth.guard';\n\n\nconst routes: Routes = [\n  { path: 'user', component: UserComponent,\n    children: [\n      { path: 'login', component: LoginComponent },\n      { path: 'registration', component: RegistrationComponent }\n    ]\n  },\n  { path: 'brands', component: BrandsComponent, canActivate: [AuthGuard] },\n  { path: 'vehicles', component: VehiclesComponent, canActivate: [AuthGuard] },\n  { path: 'advertisements', component: AdvertisementsComponent, canActivate: [AuthGuard] }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Controle de veículos';\n  isAdmin = true;\n}\n","<app-header></app-header>\n<div class=\"container\">\n  <br>\n  <router-outlet></router-outlet>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { CommonModule } from '@angular/common';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ToastrModule } from 'ngx-toastr';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrandsComponent } from './components/brands/brands.component';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { HeaderComponent } from './header/header.component';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { VehiclesComponent } from './components/vehicles/vehicles.component';\nimport { AdvertisementsComponent } from './components/advertisements/advertisements.component';\nimport { UserComponent } from './components/user/user.component';\nimport { RegistrationComponent } from './components/user/registration/registration.component';\nimport { LoginComponent } from './components/user/login/login.component';\nimport { AuthInterceptor } from './auth/auth.interceptor';\nimport { AdvertisementService } from './services/advertisement.service';\nimport { BrandService } from './services/brand.service';\nimport { VehicleService } from './services/vehicle.service';\n\n@NgModule({\n   declarations: [\n      AppComponent,\n      HeaderComponent,\n      BrandsComponent,\n      VehiclesComponent,\n      AdvertisementsComponent,\n      UserComponent,\n      RegistrationComponent,\n      LoginComponent\n   ],\n   imports: [\n      BrowserModule,\n      BsDropdownModule.forRoot(),\n      TooltipModule.forRoot(),\n      ModalModule.forRoot(),\n      ReactiveFormsModule,\n      BrowserAnimationsModule,\n      ToastrModule.forRoot(),\n      AppRoutingModule,\n      HttpClientModule,\n      FontAwesomeModule,\n      FormsModule\n   ],\n   providers: [\n      AdvertisementService,\n      BrandService,\n      VehicleService,\n      {\n         provide: HTTP_INTERCEPTORS,\n         useClass: AuthInterceptor,\n         multi: true\n      }\n   ],\n   bootstrap: [\n      AppComponent\n   ]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n\r\n  constructor(private router: Router) {}\r\n\r\n  canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\r\n    if (localStorage.getItem('token') !== null) {\r\n      return true;\r\n    } else {\r\n      this.router.navigate(['/user/login']);\r\n      return false;\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpInterceptor, HttpEvent, HttpRequest, HttpHandler } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/internal/operators/tap';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n\r\n    constructor(private router: Router) { }\r\n\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        if (localStorage.getItem('token') !== null) {\r\n            const cloneReq = req.clone({\r\n                headers: req.headers.set('Authorization', `Bearer ${localStorage.getItem('token')}`)\r\n            });\r\n            return next.handle(cloneReq).pipe(\r\n                tap(\r\n                    succ => { },\r\n                    err => {\r\n                        if (err.status === 401) {\r\n                            this.router.navigateByUrl('user/login');\r\n                        }\r\n                    }\r\n                )\r\n            );\r\n        } else {\r\n            return next.handle(req.clone());\r\n        }\r\n    }\r\n}\r\n","import { Component, OnInit, TemplateRef } from '@angular/core';\nimport { AdvertisementService } from '../../services/advertisement.service';\nimport { Advertisement } from '../../models/Advertisement';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { Vehicle } from 'src/app/models/Vehicle';\nimport { VehicleService } from 'src/app/services/vehicle.service';\n\n@Component({\n  selector: 'app-advertisements',\n  templateUrl: './advertisements.component.html',\n  styleUrls: ['./advertisements.component.css']\n})\nexport class AdvertisementsComponent implements OnInit {\n\n  advertisements: Advertisement[];\n  vehicles: Vehicle[];\n  registerForm: FormGroup;\n  advertisement: Advertisement;\n  newRecord: boolean;\n  selectedVehicle: Vehicle;\n\n  constructor(\n    private advertisementService: AdvertisementService,\n    private vehicleService: VehicleService,\n    private fb: FormBuilder,\n    private toastr: ToastrService\n  ) { }\n\n  ngOnInit() {\n    this.getAdvertisements();\n    this.getVehicles();\n    this.validation();\n  }\n\n  getVehicles() {\n    this.vehicleService.getAllVehicles().subscribe(\n    (vehicles: Vehicle[]) => {\n      this.vehicles = vehicles;\n      console.log(this.vehicles);\n    }, error => {\n      console.log(error);\n    });\n  }\n\n  getAdvertisements() {\n    this.advertisementService.getAllAdvertisements().subscribe(\n    (advertisements: Advertisement[]) => {\n      this.advertisements = advertisements;\n    }, error => {\n      console.log(error);\n    });\n  }\n\n  openModalEdit(template: any, advertisement: Advertisement){\n    this.newRecord = false;\n    this.registerForm.reset();\n    template.show();\n    this.advertisement = advertisement;\n    this.registerForm.patchValue(advertisement);\n  }\n\n  closeModal(template: any){\n    template.hide();\n  }\n\n  openModal(template: any){\n    this.newRecord = true;\n    this.registerForm.reset();\n    template.show();\n  }\n\n  validation() {\n    this.registerForm = this.fb.group({\n      modelYear: ['', [Validators.required, Validators.minLength(2), Validators.min(0), Validators.max(2099)]],\n      fabricationYear: ['', [Validators.required, Validators.minLength(2), Validators.min(0), Validators.max(2099)]],\n      color: ['', [Validators.required, Validators.minLength(1)]],\n      fuelType: ['', [Validators.required, Validators.minLength(1)]],\n      transmissionType: ['', []],\n      driveTrain: ['', []],\n      sellDate: ['', []],\n      buyPrice: ['', [Validators.required]],\n      sellPrice: ['', [Validators.required]],\n      vehicleId: ['', [Validators.required]]\n    });\n  }\n\n  salvarAlteracao(template: any) {\n    if (this.registerForm.valid) {\n      if (this.newRecord){\n        this.advertisement = Object.assign({}, this.registerForm.value);\n        console.log(this.advertisement);\n        this.advertisementService.postAdvertisement(this.advertisement).subscribe(\n          (newAdvertisement: Advertisement) => {\n            template.hide();\n            this.getAdvertisements();\n            this.toastr.success('Registro gerado com sucesso!');\n          }, error => {\n            console.log(error);\n            this.toastr.error('Erro ao inserir o registro!');\n          }\n        );\n      }\n      else{\n        this.advertisement = Object.assign({id: this.advertisement.id}, this.registerForm.value);\n        this.advertisementService.putAdvertisement(this.advertisement).subscribe(\n          (newAdvertisement: Advertisement) => {\n            template.hide();\n            this.getAdvertisements();\n            this.toastr.success('Registro alterado com sucesso!');\n          }, error => {\n            console.log(error);\n            this.toastr.error('Erro ao alterar o registro!');\n          }\n        );\n      }\n    }\n  }\n\n  excluirRegistro(id: string) {\n    this.advertisementService.deleteAdvertisement(id).subscribe(\n      result => {\n        this.getAdvertisements();\n        this.toastr.success('Registro excluído com sucesso!');\n      }, error => {\n        console.log(error);\n        this.toastr.error('Erro ao excluir o registro!');\n      }\n    );\n  }\n\n  findVehicle(id: string) {\n    if (this.vehicles){\n      let vehicle = this.vehicles.find(locate => locate.id === id);\n      return vehicle.modelName + ' ' + vehicle.modelSpecification;\n    }\n    else{\n      return '';\n    }\n  }\n\n}","<div>\n  <div class=\"row\">\n    <div class=\"col-lg-4\">\n      <h3>Anúncios:</h3>\n    </div>\n    <div class=\"col-lg-4\"></div>\n    <div class=\"col-lg-4\">\n      <div class=\"form-inline mr-right\">\n        <button class=\"btn btn-outline-primary\" (click)=\"openModal(editAdvertisement)\">\n          <i class=\"fas fa-plus-circle\"></i>\n          Novo Anúncio\n        </button>\n      </div>\n    </div>\n  </div>\n  <div class=\"form-inline mr-auto\"></div>\n  <table class=\"table table-striped\">\n    <thead>\n      <tr>\n        <th scope=\"col\">Modelo</th>\n        <th scope=\"col\">Preço de venda</th>\n        <th scope=\"col\">Preço de compra</th>\n        <th scope=\"col\">Ano de fabricação/modelo</th>\n        <th scope=\"col\">Cor</th>\n        <th scope=\"col\">Tipo de combustível</th>\n        <th scope=\"col\">Data de venda</th>\n        <th></th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let advertisement of advertisements\">\n        <th scope=\"row\">{{ findVehicle(advertisement.vehicleId) }}</th>\n        <td>{{ advertisement.sellPrice }}</td>\n        <td>{{ advertisement.buyPrice }}</td>\n        <td>{{ advertisement.fabricationYear + '/' + advertisement.modelYear }}</td>\n        <td>{{ advertisement.color }}</td>\n        <td>{{ advertisement.fuelType }}</td>\n        <td>{{ advertisement.sellDate }}</td>\n        <td>\n          <div class=\"btn-group\">\n            <button class=\"btn btn-sm btn-warning\" tooltip=\"Editar\" (click)=\"openModalEdit(editAdvertisement, advertisement)\">\n              <i class=\"fas fa-edit\"></i>\n            </button>\n            <button class=\"btn btn-sm btn-danger\" tooltip=\"Excluir\" (click)=\"excluirRegistro(advertisement.id)\">\n              <i class=\"fas fa-eraser\"></i>\n            </button>\n          </div>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</div>\n\n<div bsModal #editAdvertisement=\"bs-modal\" class=\"modal fade\" tabindex=\"-1\" role=\"dialog\"\n  aria-labelledby=\"dialog-sizes-name1\">\n  <div class=\"modal-dialog modal-lg\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h4 id=\"dialog-sizes-name1\" class=\"modal-title pull-left\">Alterar/Criar Anúncio</h4>\n        <button type=\"button\" class=\"close pull-right\" (click)=\"closeModal(editAdvertisement)\" aria-label=\"Close\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <form [formGroup]=\"registerForm\">\n          <div class=\"form-row\">\n            <div class=\"form-group col-md-6\">\n              <label>Modelo</label>\n              <select\n                [ngClass]=\"{'is-invalid': registerForm.get('vehicleId').errors && registerForm.get('vehicleId').touched}\"\n                class=\"custom-select form-control\" formControlName=\"vehicleId\">\n                <option *ngFor=\"let vehicle of vehicles\" value=\"{{vehicle.id}}\">{{vehicle.modelName + ' ' + vehicle.modelSpecification}}</option>\n              </select>\n              <div class=\"invalid-feedback\">\n                A seleção de um modelo é obrigatória\n              </div>\n            </div> \n            <div class=\"form-group col-md-3\">\n              <label>Preço de venda</label>\n              <input type=\"number\" class=\"form-control\"\n               [ngClass]=\"{'is-invalid': registerForm.get('buyPrice').errors && registerForm.get('buyPrice').touched}\"\n                formControlName=\"buyPrice\" placeholder=\"ex: 20000\">\n                <div class=\"invalid-feedback\">\n                  O Preço de venda é obrigatório\n                </div>\n            </div>\n            <div class=\"form-group col-md-3\">\n              <label>Preço de compra</label>\n              <input type=\"number\" class=\"form-control\"\n                [ngClass]=\"{'is-invalid': registerForm.get('sellPrice').errors && registerForm.get('sellPrice').touched}\"\n                formControlName=\"sellPrice\" placeholder=\"ex: 20000\">\n              <div class=\"invalid-feedback\">\n                O Preço de compra é obrigatório\n              </div>\n            </div>\n          </div>\n          <div class=\"form-row\">\n            <div class=\"form-group col-md-3\">\n              <label>Data de venda</label>\n              <input type=\"date\" class=\"form-control\" formControlName=\"sellDate\">\n            </div>\n            <div class=\"form-group col-md-3\">\n              <label>Ano de fabricação</label>\n              <input type=\"number\" class=\"form-control\" \n               [ngClass]=\"{'is-invalid': registerForm.get('fabricationYear').errors && registerForm.get('fabricationYear').touched}\"\n               formControlName=\"fabricationYear\" placeholder=\"ex: 2015\">\n            </div>\n            <div class=\"form-group col-md-3\">\n              <label>Ano do modelo</label>\n              <input type=\"number\" class=\"form-control\" \n               [ngClass]=\"{'is-invalid': registerForm.get('modelYear').errors && registerForm.get('modelYear').touched}\"\n               formControlName=\"modelYear\" placeholder=\"ex: 2015\">\n            </div>\n            <div class=\"form-group col-md-3\">\n              <label>Cor</label>\n              <input type=\"text\" class=\"form-control\" \n               [ngClass]=\"{'is-invalid': registerForm.get('color').errors && registerForm.get('color').touched}\"\n               formControlName=\"color\" placeholder=\"ex: Amarelo\">\n            </div>\n          </div>          \n          <div class=\"form-row\">\n            <div class=\"form-group col-md-4\">\n              <label>Tipo de combustível</label>\n              <input type=\"text\" class=\"form-control\" formControlName=\"fuelType\"\n               [ngClass]=\"{'is-invalid': registerForm.get('fuelType').errors && registerForm.get('fuelType').touched}\"\n               placeholder=\"ex: Gasolina, Flex, Etanol\">\n            </div>\n            <div class=\"form-group col-md-4\">\n              <label>Transmissão</label>\n              <input type=\"text\" class=\"form-control\" formControlName=\"transmissionType\"\n                placeholder=\"ex: Manual, automática, CVT\">\n            </div>\n            <div class=\"form-group col-md-4\">\n              <label>Tração</label>\n              <input type=\"text\" class=\"form-control\" formControlName=\"driveTrain\"\n                placeholder=\"ex: Dianteira, traseira, Integral, 4x4\">\n            </div>            \n          </div>\n        </form>\n      </div>\n      <div class=\"modal-footer\">\n        <button class=\"btn btn-secondary\" (click)=\"closeModal(editAdvertisement)\">\n          Fechar\n        </button>\n        <button class=\"btn btn-success\" [disabled]=\"!registerForm.valid\" (click)=\"salvarAlteracao(editAdvertisement)\">\n          Salvar Alterações\n        </button>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, OnInit, TemplateRef } from '@angular/core';\nimport { BrandService } from '../../services/brand.service';\nimport { Brand } from '../../models/Brand';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-brands',\n  templateUrl: './brands.component.html',\n  styleUrls: ['./brands.component.css']\n})\nexport class BrandsComponent implements OnInit {\n\n  brands: Brand[];\n  registerForm: FormGroup;\n  brand: Brand;\n  newRecord: boolean;\n\n  constructor(\n    private brandService: BrandService,\n    private fb: FormBuilder,\n    private toastr: ToastrService\n  ) { }\n\n  ngOnInit() {\n    this.getBrands();\n    this.validation();\n  }\n\n  getBrands() {\n    this.brandService.getAllBrands().subscribe(\n    (brands: Brand[]) => {\n      this.brands = brands;\n    }, error => {\n      console.log(error);\n    });\n  }\n\n  openModalEdit(template: any, brand: Brand){\n    this.newRecord = false;\n    this.registerForm.reset();\n    template.show();\n    this.brand = brand;\n    this.registerForm.patchValue(brand);\n  }\n\n  closeModal(template: any){\n    template.hide();\n  }\n\n  openModal(template: any){\n    this.newRecord = true;\n    this.registerForm.reset();\n    template.show();\n  }\n\n  validation() {\n    this.registerForm = this.fb.group({\n      nome: ['', [Validators.required, Validators.minLength(2)]],\n      pais: ['', [Validators.required, Validators.minLength(2)]]\n    });\n  }\n\n  salvarAlteracao(template: any) {\n    if (this.registerForm.valid) {\n      if (this.newRecord){\n        this.brand = Object.assign({}, this.registerForm.value);\n        this.brandService.postBrand(this.brand).subscribe(\n          (newBrand: Brand) => {\n            template.hide();\n            this.getBrands();\n            this.toastr.success('Registro gerado com sucesso!');\n          }, error => {\n            console.log(error);\n            this.toastr.error('Erro ao inserir o registro!');\n          }\n        );\n      }\n      else{\n        this.brand = Object.assign({id: this.brand.id}, this.registerForm.value);\n        this.brandService.putBrand(this.brand).subscribe(\n          (newBrand: Brand) => {\n            template.hide();\n            this.getBrands();\n            this.toastr.success('Registro alterado com sucesso!');\n          }, error => {\n            console.log(error);\n            this.toastr.error('Erro ao alterar o registro!');\n          }\n        );\n      }\n    }\n  }\n\n  excluirRegistro(id: string) {\n    this.brandService.deleteBrand(id).subscribe(\n      result => {\n        this.getBrands();\n        this.toastr.success('Registro excluído com sucesso!');\n      }, error => {\n        console.log(error);\n        this.toastr.error('Erro ao excluir o registro!');\n      }\n    );\n  }\n\n}\n","<div>\n  <div class=\"row\">\n    <div class=\"col-lg-4\">\n      <h3>Marcas/Fabricantes:</h3>\n    </div>\n    <div class=\"col-lg-4\"></div>\n    <div class=\"col-lg-4\">\n      <div class=\"form-inline mr-right\">\n        <button class=\"btn btn-outline-primary\" (click)=\"openModal(editBrand)\">\n          <i class=\"fas fa-plus-circle\"></i>\n          Nova Marca\n        </button>\n      </div>\n    </div>\n  </div>\n  <div class=\"form-inline mr-auto\"></div>\n  <table class=\"table table-striped\">\n    <thead>\n      <tr>\n        <th scope=\"col\">Nome</th>\n        <th scope=\"col\">País de Origem</th>\n        <th></th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let brand of brands\">\n        <th scope=\"row\">{{ brand.nome }}</th>\n        <td>{{ brand.pais }}</td>\n        <td>\n          <div class=\"btn-group\">\n              <button class=\"btn btn-sm btn-warning\" tooltip=\"Editar\"\n               (click)=\"openModalEdit(editBrand, brand)\">\n                <i class=\"fas fa-edit\"></i>\n              </button>\n              <button class=\"btn btn-sm btn-danger\" tooltip=\"Excluir\"\n               (click)=\"excluirRegistro(brand.id)\">\n                <i class=\"fas fa-eraser\"></i>\n              </button>\n          </div>\n        </td>\n      </tr>\n    </tbody>    \n  </table>\n</div>\n\n<div bsModal #editBrand=\"bs-modal\" class=\"modal fade\" tabindex=\"-1\"\n     role=\"dialog\" aria-labelledby=\"dialog-sizes-name1\">\n  <div class=\"modal-dialog modal-lg\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h4 id=\"dialog-sizes-name1\" class=\"modal-title pull-left\">Alterar/Criar Marca</h4>\n        <button type=\"button\" class=\"close pull-right\" (click)=\"closeModal(editBrand)\" aria-label=\"Close\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <form [formGroup]=\"registerForm\">\n          <div class=\"form-row\">\n            <div class=\"form-group col-md-6\">\n              <label>Nome da Marca</label>\n              <input type=\"text\" class=\"form-control\"\n               [ngClass]=\"{'is-invalid': registerForm.get('nome').errors && registerForm.get('nome').touched}\"\n               formControlName=\"nome\" placeholder=\"ex: Volkswagem\">\n              <div class=\"invalid-feedback\">\n                O nome da marca é obrigatório.\n              </div>\n            </div>\n            <div class=\"form-group col-md-6\">\n              <label>País de Origem</label>\n              <input type=\"text\" class=\"form-control\"\n               [ngClass]=\"{'is-invalid': registerForm.get('pais').errors && registerForm.get('pais').touched}\" \n               formControlName=\"pais\" placeholder=\"ex: Alemanha\">\n              <div class=\"invalid-feedback\">\n                O país de origem da marca é obrigatório.\n              </div>\n            </div>\n          </div>  \n        </form>\n      </div>\n      <div class=\"modal-footer\">\n        <button class=\"btn btn-secondary\" (click)=\"closeModal(editBrand)\">\n          Fechar\n        </button>\n        <button class=\"btn btn-success\" [disabled]=\"!registerForm.valid\" (click)=\"salvarAlteracao(editBrand)\">\n          Salvar Alterações\n        </button>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  titulo = 'Login';\r\n  model: any = {};\r\n\r\n  constructor(private authService: AuthService,\r\n              public router: Router,\r\n              private toastr: ToastrService) { }\r\n\r\n  ngOnInit() {\r\n    if (localStorage.getItem('token') != null) {\r\n      this.router.navigate(['/dashboard']);\r\n    }\r\n  }\r\n\r\n  login() {\r\n    this.authService.login(this.model)\r\n      .subscribe(\r\n        () => {\r\n          this.router.navigate(['/dashboard']);\r\n          this.toastr.success('Logado com Sucesso');\r\n        },\r\n        error => {\r\n          this.toastr.error('Falha ao tentar Logar');\r\n        }\r\n      );\r\n  }\r\n\r\n}\r\n","<app-header></app-header>\r\n\r\n<body class=\"text-center\" data-gr-c-s-loaded=\"true\">\r\n  <form class=\"form-signin\" #loginForm=\"ngForm\">\r\n    <img class=\"mb-4\" src=\"\" alt=\"\" width=\"72\" height=\"72\">\r\n    <h1 class=\"h3 mb-3 font-weight-normal\">Por favor</h1>\r\n    <label for=\"username\" class=\"sr-only\">Usuário</label>\r\n    <input type=\"email\" id=\"username\" class=\"form-control\" placeholder=\"Usuário\" name=\"username\" required\r\n      [(ngModel)]=\"model.username\">\r\n    <label for=\"password\" class=\"sr-only\">Password</label>\r\n    <input type=\"password\" id=\"password\" class=\"form-control\" placeholder=\"Senha\" name=\"password\" required\r\n      [(ngModel)]=\"model.password\">\r\n    <button [disabled]=\"!loginForm.valid\" class=\"btn btn-lg btn-primary btn-block\" type=\"submit\" onclick=\"login()\">Entrar</button>\r\n    <p class=\"mt-5 mb-3 text-muted\">Não tem login? Cadastre-se abaixo</p>\r\n    <button class=\"btn btn-lg btn-link btn-block\" (click)=\"router.navigate(['/user/registration'])\">Quero me\r\n      cadastrar</button>\r\n  </form>\r\n\r\n</body>","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { User } from 'src/app/models/User';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-registration',\r\n  templateUrl: './registration.component.html',\r\n  styleUrls: ['./registration.component.css']\r\n})\r\nexport class RegistrationComponent implements OnInit {\r\n\r\n  registerForm: FormGroup;\r\n  user: User;\r\n\r\n  constructor(private authService: AuthService\r\n    ,         public router: Router\r\n    ,         public fb: FormBuilder\r\n    ,         private toastr: ToastrService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.validation();\r\n  }\r\n\r\n  validation() {\r\n    this.registerForm = this.fb.group({\r\n      email: ['', [Validators.required, Validators.email]],\r\n      userName: ['', Validators.required],\r\n      passwords: this.fb.group({\r\n        password: ['', [Validators.required, Validators.minLength(4)]],\r\n        confirmPassword: ['', Validators.required]\r\n      }, { validator: this.compararSenhas })\r\n    });\r\n  }\r\n\r\n  compararSenhas(fb: FormGroup) {\r\n    const confirmSenhaCtrl = fb.get('confirmPassword');\r\n    if (confirmSenhaCtrl.errors == null || 'mismatch' in confirmSenhaCtrl.errors) {\r\n      if (fb.get('password').value !== confirmSenhaCtrl.value) {\r\n        confirmSenhaCtrl.setErrors({ mismatch: true });\r\n      } else {\r\n        confirmSenhaCtrl.setErrors(null);\r\n      }\r\n    }\r\n  }\r\n\r\n  cadastrarUsuario() {\r\n    if (this.registerForm.valid) {\r\n      this.user = Object.assign(\r\n        { password: this.registerForm.get('passwords.password').value },\r\n        this.registerForm.value);\r\n      this.authService.register(this.user).subscribe(\r\n        () => {\r\n          this.router.navigate(['/user/login']);\r\n          this.toastr.success('Cadastro Realizado');\r\n        }, error => {\r\n          const erro = error.error;\r\n          erro.forEach(element => {\r\n            switch (element.code) {\r\n              case 'DuplicateUserName':\r\n                this.toastr.error('Cadastro Duplicado!');\r\n                break;\r\n              default:\r\n                this.toastr.error(`Erro no Cadatro! CODE: ${element.code}`);\r\n                break;\r\n            }\r\n          });\r\n        }\r\n\r\n      );\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"row mt-4\">\r\n  <div class=\"col-md-6\" style=\"height: 450px;\">\r\n    <div class=\"row col-md-12 my-auto side-heder\">\r\n      <h1>Cadastro de Usuário</h1>\r\n    </div>\r\n  </div>\r\n  <div class=\"col-md-6\">\r\n    <form [formGroup]=\"registerForm\">\r\n      <div class=\"form-group\">\r\n        <label for=\"\">Email:</label>\r\n        <input class=\"form-control\" type=\"text\" formControlName=\"email\" [ngClass]=\"{ 'is-invalid': registerForm.get('email').errors && \r\n                                     registerForm.get('email').touched}\" placeholder=\"Insira o Nome Completo\" />\r\n        <div *ngIf=\"registerForm.get('email').hasError('required') &&\r\n                    registerForm.get('email').touched\" class=\"invalid-feedback\">\r\n          email é obrigatório.\r\n        </div>\r\n        <div *ngIf=\"registerForm.get('email').hasError('email')\r\n        && registerForm.get('email').touched\" class=\"invalid-feedback\">\r\n          Deve ser um e-mail válido.\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"\">Usuario:</label>\r\n        <input class=\"form-control\" type=\"text\" formControlName=\"userName\" [ngClass]=\"{'is-invalid': registerForm.get('userName').errors &&\r\n                                    registerForm.get('userName').touched}\" placeholder=\"Insira o nome de Usuário\" />\r\n        <div *ngIf=\"registerForm.get('userName').hasError('required') &&\r\n                    registerForm.get('userName').touched\" class=\"invalid-feedback\">\r\n          Usuário é obrigatório.\r\n        </div>\r\n      </div>\r\n      <div formGroupName=\"passwords\">\r\n        <div class=\"form-group\">\r\n          <label for=\"\">Senha:</label>\r\n          <input class=\"form-control\" type=\"password\" formControlName=\"password\" [ngClass]=\"{ 'is-invalid': registerForm.get('passwords.password').errors &&\r\n                                       registerForm.get('passwords.password').touched}\"\r\n            placeholder=\"Digite uma Senha\" />\r\n          <div *ngIf=\"registerForm.get('passwords.password').hasError('minlength') &&\r\n            registerForm.get('passwords.password').touched\" class=\"invalid-feedback\">\r\n            Deve conter no mínimo 4 caracters\r\n          </div>\r\n          <div *ngIf=\"registerForm.get('passwords.password').hasError('required') &&\r\n                      registerForm.get('passwords.password').touched\" class=\"invalid-feedback\">\r\n            Senha é obrigatório.\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"\">Confirmar Senha:</label>\r\n          <input class=\"form-control\" type=\"password\" formControlName=\"confirmPassword\" [ngClass]=\"{ 'is-invalid': registerForm.get('passwords.confirmPassword').errors \r\n                         && registerForm.get('passwords.confirmPassword').touched \r\n                         ||registerForm.get('passwords.confirmPassword').hasError('mismatch') \r\n                         && registerForm.get('passwords.confirmPassword').touched }\" placeholder=\"Confirme a Senha\" />\r\n          <div *ngIf=\"registerForm.get('passwords.confirmPassword').hasError('required') &&\r\n                      registerForm.get('passwords.confirmPassword').touched\" class=\"invalid-feedback\">\r\n            Confirme a Senha\r\n          </div>\r\n          <div *ngIf=\"registerForm.get('passwords.confirmPassword').hasError('mismatch') \r\n                      && registerForm.get('passwords.confirmPassword').touched\" class=\"invalid-feedback\">\r\n            Confirmação não confere\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-row\">\r\n        <div class=\"form-group col-md-8 offset-md-2\">\r\n          <button class=\"btn btn-lg btn-success btn-block\" [disabled]=\"!registerForm.valid\"\r\n            (click)=\"cadastrarUsuario()\">Registar</button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-user',\r\n  templateUrl: './user.component.html',\r\n  styleUrls: ['./user.component.css']\r\n})\r\nexport class UserComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n  <div class=\"col-md-8 offset-md-2\">\r\n    <router-outlet></router-outlet>\r\n  </div>\r\n</div>","import { Component, OnInit, TemplateRef } from '@angular/core';\nimport { VehicleService } from '../../services/vehicle.service';\nimport { Vehicle } from '../../models/Vehicle';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { Brand } from 'src/app/models/Brand';\nimport { BrandService } from 'src/app/services/brand.service';\n\n@Component({\n  selector: 'app-vehicles',\n  templateUrl: './vehicles.component.html',\n  styleUrls: ['./vehicles.component.css']\n})\nexport class VehiclesComponent implements OnInit {\n\n  vehicles: Vehicle[];\n  brands: Brand[];\n  registerForm: FormGroup;\n  vehicle: Vehicle;\n  newRecord: boolean;\n  selectedBrand: Brand;\n\n  constructor(\n    private vehicleService: VehicleService,\n    private brandService: BrandService,\n    private fb: FormBuilder,\n    private toastr: ToastrService\n  ) { }\n\n  ngOnInit() {\n    this.getVehicles();\n    this.getBrands();\n    this.validation();\n  }\n\n  getBrands() {\n    this.brandService.getAllBrands().subscribe(\n    (brands: Brand[]) => {\n      this.brands = brands;\n    }, error => {\n      console.log(error);\n    });\n  }\n\n  getVehicles() {\n    this.vehicleService.getAllVehicles().subscribe(\n    (vehicles: Vehicle[]) => {\n      this.vehicles = vehicles;\n    }, error => {\n      console.log(error);\n    });\n  }\n\n  openModalEdit(template: any, vehicle: Vehicle){\n    this.newRecord = false;\n    this.registerForm.reset();\n    template.show();\n    this.vehicle = vehicle;\n    this.registerForm.patchValue(vehicle);\n  }\n\n  closeModal(template: any){\n    template.hide();\n  }\n\n  openModal(template: any){\n    this.newRecord = true;\n    this.registerForm.reset();\n    template.show();\n  }\n\n  validation() {\n    this.registerForm = this.fb.group({\n      modelName: ['', [Validators.required, Validators.minLength(2)]],\n      modelSpecification: ['', [Validators.required, Validators.minLength(1)]],\n      bodytype: ['', []],\n      engineDisplacement: ['', []],\n      engineSpecification: ['', []],\n      brandId: ['', [Validators.required]]\n    });\n  }\n\n  salvarAlteracao(template: any) {\n    if (this.registerForm.valid) {\n      if (this.newRecord){\n        this.vehicle = Object.assign({}, this.registerForm.value);\n        console.log(this.vehicle);\n        this.vehicleService.postVehicle(this.vehicle).subscribe(\n          (newVehicle: Vehicle) => {\n            template.hide();\n            this.getVehicles();\n            this.toastr.success('Registro gerado com sucesso!');\n          }, error => {\n            console.log(error);\n            this.toastr.error('Erro ao inserir o registro!');\n          }\n        );\n      }\n      else{\n        this.vehicle = Object.assign({id: this.vehicle.id}, this.registerForm.value);\n        this.vehicleService.putVehicle(this.vehicle).subscribe(\n          (newVehicle: Vehicle) => {\n            template.hide();\n            this.getVehicles();\n            this.toastr.success('Registro alterado com sucesso!');\n          }, error => {\n            console.log(error);\n            this.toastr.error('Erro ao alterar o registro!');\n          }\n        );\n      }\n    }\n  }\n\n  excluirRegistro(id: string) {\n    this.vehicleService.deleteVehicle(id).subscribe(\n      result => {\n        this.getVehicles();\n        this.toastr.success('Registro excluído com sucesso!');\n      }, error => {\n        console.log(error);\n        this.toastr.error('Erro ao excluir o registro!');\n      }\n    );\n  }\n\n  findBrandInList(id: string) {\n    if (this.brands){\n      return this.brands.find(locate => locate.id === id).nome;\n    }\n    else{\n      return '';\n    }\n  }\n\n}\n","<div>\n  <div class=\"row\">\n    <div class=\"col-lg-4\">\n      <h3>Veículos:</h3>\n    </div>\n    <div class=\"col-lg-4\"></div>\n    <div class=\"col-lg-4\">\n      <div class=\"form-inline mr-right\">\n        <button class=\"btn btn-outline-primary\" (click)=\"openModal(editVehicle)\">\n          <i class=\"fas fa-plus-circle\"></i>\n          Novo Veículo\n        </button>\n      </div>\n    </div>\n  </div>\n  <div class=\"form-inline mr-auto\"></div>\n  <table class=\"table table-striped\">\n    <thead>\n      <tr>\n        <th scope=\"col\">Fabricante</th>\n        <th scope=\"col\">Nome do modelo</th>\n        <th scope=\"col\">Especificação do modelo</th>\n        <th scope=\"col\">Cilindrada do motor</th>\n        <th scope=\"col\">Tipo de carroceria</th>\n        <th scope=\"col\">Especificação do motor</th>\n        <th></th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let vehicle of vehicles\">\n        <th scope=\"row\">{{ findBrandInList(vehicle.brandId) }}</th>\n        <td>{{ vehicle.modelName }}</td>\n        <td>{{ vehicle.modelSpecification }}</td>\n        <td>{{ vehicle.engineDisplacement }}</td>\n        <td>{{ vehicle.bodytype }}</td>\n        <td>{{ vehicle.engineSpecification }}</td>\n        <td>\n          <div class=\"btn-group\">\n            <button class=\"btn btn-sm btn-warning\" tooltip=\"Editar\" (click)=\"openModalEdit(editVehicle, vehicle)\">\n              <i class=\"fas fa-edit\"></i>\n            </button>\n            <button class=\"btn btn-sm btn-danger\" tooltip=\"Excluir\" (click)=\"excluirRegistro(vehicle.id)\">\n              <i class=\"fas fa-eraser\"></i>\n            </button>\n          </div>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</div>\n\n<div bsModal #editVehicle=\"bs-modal\" class=\"modal fade\" tabindex=\"-1\" role=\"dialog\"\n  aria-labelledby=\"dialog-sizes-name1\">\n  <div class=\"modal-dialog modal-lg\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h4 id=\"dialog-sizes-name1\" class=\"modal-title pull-left\">Alterar/Criar veículo</h4>\n        <button type=\"button\" class=\"close pull-right\" (click)=\"closeModal(editVehicle)\" aria-label=\"Close\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <form [formGroup]=\"registerForm\">\n          <div class=\"form-row\">\n            <div class=\"form-group col-md-4\">\n              <label>Nome do modelo</label>\n              <input type=\"text\" class=\"form-control\"\n                [ngClass]=\"{'is-invalid': registerForm.get('modelName').errors && registerForm.get('modelName').touched}\"\n                formControlName=\"modelName\" placeholder=\"ex: Civic\">\n              <div class=\"invalid-feedback\">\n                O nome do modelo é obrigatório.\n              </div>\n            </div>\n            <div class=\"form-group col-md-4\">\n              <label>Especificação do modelo</label>\n              <input type=\"text\" class=\"form-control\"\n                [ngClass]=\"{'is-invalid': registerForm.get('modelSpecification').errors && registerForm.get('modelSpecification').touched}\"\n                formControlName=\"modelSpecification\" placeholder=\"ex: EXS VTEC\">\n              <div class=\"invalid-feedback\">\n                A especificação do modelo é obrigatório.\n              </div>\n            </div>\n            <div class=\"form-group col-md-4\">\n              <label>Tipo da carroceria</label>\n              <input type=\"text\" class=\"form-control\" formControlName=\"bodytype\" placeholder=\"ex: Sedã, Coupe, Hatch\">\n            </div>\n          </div>\n          <div class=\"form-row\">\n            <div class=\"form-group col-md-3\">\n              <label>Cilindrada do motor</label>\n              <input type=\"number\" class=\"form-control\" formControlName=\"engineDisplacement\" placeholder=\"ex: 2000 (2.0)\">\n            </div>\n            <div class=\"form-group col-md-6\">\n              <label>Tipo do motor</label>\n              <input type=\"text\" class=\"form-control\" formControlName=\"engineSpecification\"\n                placeholder=\"ex: 4 em linha aspirado, v6 supercharged\">\n            </div>\n            <div class=\"form-group col-md-3\">\n              <label>Fabricante/Marca</label>\n              <select\n                [ngClass]=\"{'is-invalid': registerForm.get('brandId').errors && registerForm.get('brandId').touched}\"\n                class=\"custom-select form-control\" formControlName=\"brandId\">\n                <option *ngFor=\"let brand of brands\" value=\"{{brand.id}}\">{{brand.nome}}</option>\n              </select>\n              <div class=\"invalid-feedback\">\n                A seleção de um fabricante é obrigatória\n              </div>\n            </div>\n          </div>\n        </form>\n      </div>\n      <div class=\"modal-footer\">\n        <button class=\"btn btn-secondary\" (click)=\"closeModal(editVehicle)\">\n          Fechar\n        </button>\n        <button class=\"btn btn-success\" [disabled]=\"!registerForm.valid\" (click)=\"salvarAlteracao(editVehicle)\">\n          Salvar Alterações\n        </button>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../services/auth.service';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor(public authService: AuthService\n            , public router: Router\n            , private toastr: ToastrService) { }\n\n  ngOnInit() {\n  }\n\n  loggedIn() {\n    return this.authService.loggedIn();\n  }\n\n  entrar() {\n    this.router.navigate(['/user/login']);\n  }\n\n  logout() {\n    localStorage.removeItem('token');\n    this.toastr.show('Log Out');\n    this.router.navigate(['/user/login']);\n  }\n\n}\n","<nav class=\"navbar navbar-expand-lg navbar-dark bg-dark fixed-top\">\n  <div class=\"container\">\n    <a class=\"navbar-brand\" href=\"#\">Controle automotivo</a>\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarResponsive\" aria-controls=\"navbarResponsive\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    <div class=\"collapse navbar-collapse\" id=\"navbarResponsive\">\n      <ul class=\"navbar-nav ml-auto\">\n        <li class=\"nav-item active\">\n          <a class=\"nav-link\" routerLink=\"\">Home\n            <span class=\"sr-only\">(current)</span>\n          </a>\n        </li>\n        <li class=\"nav-item\" *ngIf=\"!loggedIn()\">\n          <a class=\"nav-link\" routerLink=\"#\">Login</a>\n        </li>\n        <li class=\"nav-item\" *ngIf=\"loggedIn()\">\n          <a class=\"nav-link\" routerLink=\"brands\">marcas</a>\n        </li>\n        <li class=\"nav-item\" *ngIf=\"loggedIn()\">\n          <a class=\"nav-link\" routerLink=\"vehicles\">veículos</a>\n        </li>\n        <li class=\"nav-item\" *ngIf=\"loggedIn()\">\n          <a class=\"nav-link\" routerLink=\"advertisements\">anúncios</a>\n        </li>\n      </ul>\n    </div>\n  </div>\n</nav>","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Advertisement } from '../models/Advertisement';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdvertisementService {\n  baseUrl: string = environment.baseUrl + 'Advertisements/';\n  constructor(private http: HttpClient) { }\n\n  getAllAdvertisements(): Observable<Advertisement[]> {\n    return this.http.get<Advertisement[]>(this.baseUrl);\n  }\n\n  getAdvertisementById(id: string): Observable<Advertisement> {\n    return this.http.get<Advertisement>(this.baseUrl + id);\n  }\n\n  postAdvertisement(advertisement: Advertisement){\n    console.log(this.baseUrl);\n    return this.http.post(this.baseUrl, advertisement);\n  }\n\n  putAdvertisement(advertisement: Advertisement){\n    console.log(advertisement);\n    console.log(advertisement.id);\n    return this.http.put(this.baseUrl + advertisement.id, advertisement);\n  }\n\n  deleteAdvertisement(id: string){\n    return this.http.delete(this.baseUrl + id);\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n\r\n  baseURL = 'http://localhost:5000/api/user/';\r\n  jwtHelper = new JwtHelperService();\r\n  decodedToken: any;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  login(model: any) {\r\n    return this.http\r\n      .post(`${this.baseURL}login`, model).pipe(\r\n        map((response: any) => {\r\n          const user = response;\r\n          if (user) {\r\n            localStorage.setItem('token', user.token);\r\n            this.decodedToken = this.jwtHelper.decodeToken(user.token);\r\n            sessionStorage.setItem('username', this.decodedToken.unique_name);\r\n          }\r\n        })\r\n      );\r\n  }\r\n\r\n  register(model: any) {\r\n    return this.http.post(`${this.baseURL}register`, model);\r\n  }\r\n\r\n  loggedIn() {\r\n    const token = localStorage.getItem('token');\r\n    return !this.jwtHelper.isTokenExpired(token);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { Observable } from 'rxjs';\nimport { Brand } from '../models/Brand';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BrandService {\n  baseUrl: string = environment.baseUrl + 'Brands/';\n  constructor(private http: HttpClient) { }\n\n  getAllBrands(): Observable<Brand[]> {\n    return this.http.get<Brand[]>(this.baseUrl);\n  }\n\n  getBrandById(id: string): Observable<Brand> {\n    return this.http.get<Brand>(this.baseUrl + id);\n  }\n\n  postBrand(brand: Brand){\n    return this.http.post(this.baseUrl, brand);\n  }\n\n  putBrand(brand: Brand){\n    console.log(brand);\n    console.log(brand.id);\n    return this.http.put(this.baseUrl + brand.id, brand);\n  }\n\n  deleteBrand(id: string){\n    return this.http.delete(this.baseUrl + id);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Vehicle } from '../models/Vehicle';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class VehicleService {\n\n  baseUrl: string = environment.baseUrl + 'Vehicles/';\n  constructor(private http: HttpClient) { }\n\n  getAllVehicles(): Observable<Vehicle[]> {\n    return this.http.get<Vehicle[]>(this.baseUrl);\n  }\n\n  getVehicleById(id: string): Observable<Vehicle> {\n    return this.http.get<Vehicle>(this.baseUrl + id);\n  }\n\n  postVehicle(vehicle: Vehicle){\n    return this.http.post(this.baseUrl, vehicle);\n  }\n\n  putVehicle(vehicle: Vehicle){\n    console.log(vehicle);\n    console.log(vehicle.id);\n    return this.http.put(this.baseUrl + vehicle.id, vehicle);\n  }\n\n  deleteVehicle(id: string){\n    return this.http.delete(this.baseUrl + id);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  baseUrl: 'http://localhost:5000/api/'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}