{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/auth/auth.guard.ts","./src/app/auth/auth.interceptor.ts","./src/app/components/advertisements/advertisements.component.ts","./src/app/components/advertisements/advertisements.component.html","./src/app/components/brands/brands.component.ts","./src/app/components/brands/brands.component.html","./src/app/components/user/login/login.component.ts","./src/app/components/user/login/login.component.html","./src/app/components/user/registration/registration.component.ts","./src/app/components/user/registration/registration.component.html","./src/app/components/user/user.component.ts","./src/app/components/user/user.component.html","./src/app/components/vehicles/vehicles.component.ts","./src/app/components/vehicles/vehicles.component.html","./src/app/header/header.component.ts","./src/app/header/header.component.html","./src/app/services/advertisement.service.ts","./src/app/services/auth.service.ts","./src/app/services/brand.service.ts","./src/app/services/vehicle.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { BrandsComponent } from './components/brands/brands.component';\nimport { VehiclesComponent } from './components/vehicles/vehicles.component';\nimport { AdvertisementsComponent } from './components/advertisements/advertisements.component';\nimport { UserComponent } from './components/user/user.component';\nimport { RegistrationComponent } from './components/user/registration/registration.component';\nimport { LoginComponent } from './components/user/login/login.component';\nimport { AuthGuard } from './auth/auth.guard';\n\n\nconst routes: Routes = [\n  { path: 'user', component: UserComponent,\n    children: [\n      { path: 'login', component: LoginComponent },\n      { path: 'registration', component: RegistrationComponent }\n    ]\n  },\n  { path: 'brands', component: BrandsComponent, canActivate: [AuthGuard] },\n  { path: 'vehicles', component: VehiclesComponent, canActivate: [AuthGuard] },\n  { path: 'advertisements', component: AdvertisementsComponent, canActivate: [AuthGuard] }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Controle de veículos';\n  isAdmin = true;\n}\n","<app-header></app-header>\n<div class=\"container\">\n  <br>\n  <router-outlet></router-outlet>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { CommonModule } from '@angular/common';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ToastrModule } from 'ngx-toastr';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrandsComponent } from './components/brands/brands.component';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { HeaderComponent } from './header/header.component';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { VehiclesComponent } from './components/vehicles/vehicles.component';\nimport { AdvertisementsComponent } from './components/advertisements/advertisements.component';\nimport { UserComponent } from './components/user/user.component';\nimport { RegistrationComponent } from './components/user/registration/registration.component';\nimport { LoginComponent } from './components/user/login/login.component';\nimport { AuthInterceptor } from './auth/auth.interceptor';\nimport { AdvertisementService } from './services/advertisement.service';\nimport { BrandService } from './services/brand.service';\nimport { VehicleService } from './services/vehicle.service';\n\n@NgModule({\n   declarations: [\n      AppComponent,\n      HeaderComponent,\n      BrandsComponent,\n      VehiclesComponent,\n      AdvertisementsComponent,\n      UserComponent,\n      RegistrationComponent,\n      LoginComponent\n   ],\n   imports: [\n      BrowserModule,\n      BsDropdownModule.forRoot(),\n      TooltipModule.forRoot(),\n      ModalModule.forRoot(),\n      ReactiveFormsModule,\n      BrowserAnimationsModule,\n      ToastrModule.forRoot(),\n      AppRoutingModule,\n      HttpClientModule,\n      FontAwesomeModule,\n      FormsModule\n   ],\n   providers: [\n      AdvertisementService,\n      BrandService,\n      VehicleService,\n      {\n         provide: HTTP_INTERCEPTORS,\n         useClass: AuthInterceptor,\n         multi: true\n      }\n   ],\n   bootstrap: [\n      AppComponent\n   ]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n\r\n  constructor(private router: Router) {}\r\n\r\n  canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\r\n    if (localStorage.getItem('token') !== null) {\r\n      return true;\r\n    } else {\r\n      this.router.navigate(['/user/login']);\r\n      return false;\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpInterceptor, HttpEvent, HttpRequest, HttpHandler } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/internal/operators/tap';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n\r\n    constructor(private router: Router) { }\r\n\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        if (localStorage.getItem('token') !== null) {\r\n            const cloneReq = req.clone({\r\n                headers: req.headers.set('Authorization', `Bearer ${localStorage.getItem('token')}`)\r\n            });\r\n            return next.handle(cloneReq).pipe(\r\n                tap(\r\n                    succ => { },\r\n                    err => {\r\n                        if (err.status === 401) {\r\n                            this.router.navigateByUrl('user/login');\r\n                        }\r\n                    }\r\n                )\r\n            );\r\n        } else {\r\n            return next.handle(req.clone());\r\n        }\r\n    }\r\n}\r\n","import { Component, OnInit, TemplateRef } from '@angular/core';\nimport { AdvertisementService } from '../../services/advertisement.service';\nimport { Advertisement } from '../../models/Advertisement';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { Vehicle } from 'src/app/models/Vehicle';\nimport { VehicleService } from 'src/app/services/vehicle.service';\n\n@Component({\n  selector: 'app-advertisements',\n  templateUrl: './advertisements.component.html',\n  styleUrls: ['./advertisements.component.css']\n})\nexport class AdvertisementsComponent implements OnInit {\n\n  advertisements: Advertisement[];\n  vehicles: Vehicle[];\n  registerForm: FormGroup;\n  advertisement: Advertisement;\n  newRecord: boolean;\n  selectedVehicle: Vehicle;\n\n  constructor(\n    private advertisementService: AdvertisementService,\n    private vehicleService: VehicleService,\n    private fb: FormBuilder,\n    private toastr: ToastrService\n  ) { }\n\n  ngOnInit() {\n    this.getAdvertisements();\n    this.getVehicles();\n    this.validation();\n  }\n\n  getVehicles() {\n    this.vehicleService.getAllVehicles().subscribe(\n    (vehicles: Vehicle[]) => {\n      this.vehicles = vehicles;\n      console.log(this.vehicles);\n    }, error => {\n      console.log(error);\n    });\n  }\n\n  getAdvertisements() {\n    this.advertisementService.getAllAdvertisements().subscribe(\n    (advertisements: Advertisement[]) => {\n      this.advertisements = advertisements;\n    }, error => {\n      console.log(error);\n    });\n  }\n\n  openModalEdit(template: any, advertisement: Advertisement){\n    this.newRecord = false;\n    this.registerForm.reset();\n    template.show();\n    this.advertisement = advertisement;\n    this.registerForm.patchValue(advertisement);\n  }\n\n  closeModal(template: any){\n    template.hide();\n  }\n\n  openModal(template: any){\n    this.newRecord = true;\n    this.registerForm.reset();\n    template.show();\n  }\n\n  validation() {\n    this.registerForm = this.fb.group({\n      modelYear: ['', [Validators.required, Validators.minLength(2), Validators.min(0), Validators.max(2099)]],\n      fabricationYear: ['', [Validators.required, Validators.minLength(2), Validators.min(0), Validators.max(2099)]],\n      color: ['', [Validators.required, Validators.minLength(1)]],\n      fuelType: ['', [Validators.required, Validators.minLength(1)]],\n      transmissionType: ['', []],\n      driveTrain: ['', []],\n      sellDate: ['', []],\n      buyPrice: ['', [Validators.required]],\n      sellPrice: ['', [Validators.required]],\n      vehicleId: ['', [Validators.required]]\n    });\n  }\n\n  salvarAlteracao(template: any) {\n    if (this.registerForm.valid) {\n      if (this.newRecord){\n        this.advertisement = Object.assign({}, this.registerForm.value);\n        console.log(this.advertisement);\n        this.advertisementService.postAdvertisement(this.advertisement).subscribe(\n          (newAdvertisement: Advertisement) => {\n            template.hide();\n            this.getAdvertisements();\n            this.toastr.success('Registro gerado com sucesso!');\n          }, error => {\n            console.log(error);\n            this.toastr.error('Erro ao inserir o registro!');\n          }\n        );\n      }\n      else{\n        this.advertisement = Object.assign({id: this.advertisement.id}, this.registerForm.value);\n        this.advertisementService.putAdvertisement(this.advertisement).subscribe(\n          (newAdvertisement: Advertisement) => {\n            template.hide();\n            this.getAdvertisements();\n            this.toastr.success('Registro alterado com sucesso!');\n          }, error => {\n            console.log(error);\n            this.toastr.error('Erro ao alterar o registro!');\n          }\n        );\n      }\n    }\n  }\n\n  excluirRegistro(id: string) {\n    this.advertisementService.deleteAdvertisement(id).subscribe(\n      result => {\n        this.getAdvertisements();\n        this.toastr.success('Registro excluído com sucesso!');\n      }, error => {\n        console.log(error);\n        this.toastr.error('Erro ao excluir o registro!');\n      }\n    );\n  }\n\n  findVehicle(id: string) {\n    if (this.vehicles){\n      let vehicle = this.vehicles.find(locate => locate.id === id);\n      return vehicle.modelName + ' ' + vehicle.modelSpecification;\n    }\n    else{\n      return '';\n    }\n  }\n\n}","<div>\n  <div class=\"row\">\n    <div class=\"col-lg-4\">\n      <h3>Anúncios:</h3>\n    </div>\n    <div class=\"col-lg-4\"></div>\n    <div class=\"col-lg-4\">\n      <div class=\"form-inline mr-right\">\n        <button class=\"btn btn-outline-primary\" (click)=\"openModal(editAdvertisement)\">\n          <i class=\"fas fa-plus-circle\"></i>\n          Novo Anúncio\n        </button>\n      </div>\n    </div>\n  </div>\n  <div class=\"form-inline mr-auto\"></div>\n  <table class=\"table table-striped\">\n    <thead>\n      <tr>\n        <th scope=\"col\">Modelo</th>\n        <th scope=\"col\">Preço de venda</th>\n        <th scope=\"col\">Preço de compra</th>\n        <th scope=\"col\">Ano de fabricação/modelo</th>\n        <th scope=\"col\">Cor</th>\n        <th scope=\"col\">Tipo de combustível</th>\n        <th scope=\"col\">Data de venda</th>\n        <th></th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let advertisement of advertisements\">\n        <th scope=\"row\">{{ findVehicle(advertisement.vehicleId) }}</th>\n        <td>{{ advertisement.sellPrice }}</td>\n        <td>{{ advertisement.buyPrice }}</td>\n        <td>{{ advertisement.fabricationYear + '/' + advertisement.modelYear }}</td>\n        <td>{{ advertisement.color }}</td>\n        <td>{{ advertisement.fuelType }}</td>\n        <td>{{ advertisement.sellDate }}</td>\n        <td>\n          <div class=\"btn-group\">\n            <button class=\"btn btn-sm btn-warning\" tooltip=\"Editar\" (click)=\"openModalEdit(editAdvertisement, advertisement)\">\n              <i class=\"fas fa-edit\"></i>\n            </button>\n            <button class=\"btn btn-sm btn-danger\" tooltip=\"Excluir\" (click)=\"excluirRegistro(advertisement.id)\">\n              <i class=\"fas fa-eraser\"></i>\n            </button>\n          </div>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</div>\n\n<div bsModal #editAdvertisement=\"bs-modal\" class=\"modal fade\" tabindex=\"-1\" role=\"dialog\"\n  aria-labelledby=\"dialog-sizes-name1\">\n  <div class=\"modal-dialog modal-lg\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h4 id=\"dialog-sizes-name1\" class=\"modal-title pull-left\">Alterar/Criar Anúncio</h4>\n        <button type=\"button\" class=\"close pull-right\" (click)=\"closeModal(editAdvertisement)\" aria-label=\"Close\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <form [formGroup]=\"registerForm\">\n          <div class=\"form-row\">\n            <div class=\"form-group col-md-6\">\n              <label>Modelo</label>\n              <select\n                [ngClass]=\"{'is-invalid': registerForm.get('vehicleId').errors && registerForm.get('vehicleId').touched}\"\n                class=\"custom-select form-control\" formControlName=\"vehicleId\">\n                <option *ngFor=\"let vehicle of vehicles\" value=\"{{vehicle.id}}\">{{vehicle.modelName + ' ' + vehicle.modelSpecification}}</option>\n              </select>\n              <div class=\"invalid-feedback\">\n                A seleção de um modelo é obrigatória\n              </div>\n            </div> \n            <div class=\"form-group col-md-3\">\n              <label>Preço de venda</label>\n              <input type=\"number\" class=\"form-control\"\n               [ngClass]=\"{'is-invalid': registerForm.get('buyPrice').errors && registerForm.get('buyPrice').touched}\"\n                formControlName=\"buyPrice\" placeholder=\"ex: 20000\">\n                <div class=\"invalid-feedback\">\n                  O Preço de venda é obrigatório\n                </div>\n            </div>\n            <div class=\"form-group col-md-3\">\n              <label>Preço de compra</label>\n              <input type=\"number\" class=\"form-control\"\n                [ngClass]=\"{'is-invalid': registerForm.get('sellPrice').errors && registerForm.get('sellPrice').touched}\"\n                formControlName=\"sellPrice\" placeholder=\"ex: 20000\">\n              <div class=\"invalid-feedback\">\n                O Preço de compra é obrigatório\n              </div>\n            </div>\n          </div>\n          <div class=\"form-row\">\n            <div class=\"form-group col-md-3\">\n              <label>Data de venda</label>\n              <input type=\"date\" class=\"form-control\" formControlName=\"sellDate\">\n            </div>\n            <div class=\"form-group col-md-3\">\n              <label>Ano de fabricação</label>\n              <input type=\"number\" class=\"form-control\" \n               [ngClass]=\"{'is-invalid': registerForm.get('fabricationYear').errors && registerForm.get('fabricationYear').touched}\"\n               formControlName=\"fabricationYear\" placeholder=\"ex: 2015\">\n            </div>\n            <div class=\"form-group col-md-3\">\n              <label>Ano do modelo</label>\n              <input type=\"number\" class=\"form-control\" \n               [ngClass]=\"{'is-invalid': registerForm.get('modelYear').errors && registerForm.get('modelYear').touched}\"\n               formControlName=\"modelYear\" placeholder=\"ex: 2015\">\n            </div>\n            <div class=\"form-group col-md-3\">\n              <label>Cor</label>\n              <input type=\"text\" class=\"form-control\" \n               [ngClass]=\"{'is-invalid': registerForm.get('color').errors && registerForm.get('color').touched}\"\n               formControlName=\"color\" placeholder=\"ex: Amarelo\">\n            </div>\n          </div>          \n          <div class=\"form-row\">\n            <div class=\"form-group col-md-4\">\n              <label>Tipo de combustível</label>\n              <input type=\"text\" class=\"form-control\" formControlName=\"fuelType\"\n               [ngClass]=\"{'is-invalid': registerForm.get('fuelType').errors && registerForm.get('fuelType').touched}\"\n               placeholder=\"ex: Gasolina, Flex, Etanol\">\n            </div>\n            <div class=\"form-group col-md-4\">\n              <label>Transmissão</label>\n              <input type=\"text\" class=\"form-control\" formControlName=\"transmissionType\"\n                placeholder=\"ex: Manual, automática, CVT\">\n            </div>\n            <div class=\"form-group col-md-4\">\n              <label>Tração</label>\n              <input type=\"text\" class=\"form-control\" formControlName=\"driveTrain\"\n                placeholder=\"ex: Dianteira, traseira, Integral, 4x4\">\n            </div>            \n          </div>\n        </form>\n      </div>\n      <div class=\"modal-footer\">\n        <button class=\"btn btn-secondary\" (click)=\"closeModal(editAdvertisement)\">\n          Fechar\n        </button>\n        <button class=\"btn btn-success\" [disabled]=\"!registerForm.valid\" (click)=\"salvarAlteracao(editAdvertisement)\">\n          Salvar Alterações\n        </button>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, OnInit, TemplateRef } from '@angular/core';\nimport { BrandService } from '../../services/brand.service';\nimport { Brand } from '../../models/Brand';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-brands',\n  templateUrl: './brands.component.html',\n  styleUrls: ['./brands.component.css']\n})\nexport class BrandsComponent implements OnInit {\n\n  brands: Brand[];\n  registerForm: FormGroup;\n  brand: Brand;\n  newRecord: boolean;\n\n  constructor(\n    private brandService: BrandService,\n    private fb: FormBuilder,\n    private toastr: ToastrService\n  ) { }\n\n  ngOnInit() {\n    this.getBrands();\n    this.validation();\n  }\n\n  getBrands() {\n    this.brandService.getAllBrands().subscribe(\n    (brands: Brand[]) => {\n      this.brands = brands;\n    }, error => {\n      console.log(error);\n    });\n  }\n\n  openModalEdit(template: any, brand: Brand){\n    this.newRecord = false;\n    this.registerForm.reset();\n    template.show();\n    this.brand = brand;\n    this.registerForm.patchValue(brand);\n  }\n\n  closeModal(template: any){\n    template.hide();\n  }\n\n  openModal(template: any){\n    this.newRecord = true;\n    this.registerForm.reset();\n    template.show();\n  }\n\n  validation() {\n    this.registerForm = this.fb.group({\n      nome: ['', [Validators.required, Validators.minLength(2)]],\n      pais: ['', [Validators.required, Validators.minLength(2)]]\n    });\n  }\n\n  salvarAlteracao(template: any) {\n    if (this.registerForm.valid) {\n      if (this.newRecord){\n        this.brand = Object.assign({}, this.registerForm.value);\n        this.brandService.postBrand(this.brand).subscribe(\n          (newBrand: Brand) => {\n            template.hide();\n            this.getBrands();\n            this.toastr.success('Registro gerado com sucesso!');\n          }, error => {\n            console.log(error);\n            this.toastr.error('Erro ao inserir o registro!');\n          }\n        );\n      }\n      else{\n        this.brand = Object.assign({id: this.brand.id}, this.registerForm.value);\n        this.brandService.putBrand(this.brand).subscribe(\n          (newBrand: Brand) => {\n            template.hide();\n            this.getBrands();\n            this.toastr.success('Registro alterado com sucesso!');\n          }, error => {\n            console.log(error);\n            this.toastr.error('Erro ao alterar o registro!');\n          }\n        );\n      }\n    }\n  }\n\n  excluirRegistro(id: string) {\n    this.brandService.deleteBrand(id).subscribe(\n      result => {\n        this.getBrands();\n        this.toastr.success('Registro excluído com sucesso!');\n      }, error => {\n        console.log(error);\n        this.toastr.error('Erro ao excluir o registro!');\n      }\n    );\n  }\n\n}\n","<div>\n  <div class=\"row\">\n    <div class=\"col-lg-4\">\n      <h3>Marcas/Fabricantes:</h3>\n    </div>\n    <div class=\"col-lg-4\"></div>\n    <div class=\"col-lg-4\">\n      <div class=\"form-inline mr-right\">\n        <button class=\"btn btn-outline-primary\" (click)=\"openModal(editBrand)\">\n          <i class=\"fas fa-plus-circle\"></i>\n          Nova Marca\n        </button>\n      </div>\n    </div>\n  </div>\n  <div class=\"form-inline mr-auto\"></div>\n  <table class=\"table table-striped\">\n    <thead>\n      <tr>\n        <th scope=\"col\">Nome</th>\n        <th scope=\"col\">País de Origem</th>\n        <th></th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let brand of brands\">\n        <th scope=\"row\">{{ brand.nome }}</th>\n        <td>{{ brand.pais }}</td>\n        <td>\n          <div class=\"btn-group\">\n              <button class=\"btn btn-sm btn-warning\" tooltip=\"Editar\"\n               (click)=\"openModalEdit(editBrand, brand)\">\n                <i class=\"fas fa-edit\"></i>\n              </button>\n              <button class=\"btn btn-sm btn-danger\" tooltip=\"Excluir\"\n               (click)=\"excluirRegistro(brand.id)\">\n                <i class=\"fas fa-eraser\"></i>\n              </button>\n          </div>\n        </td>\n      </tr>\n    </tbody>    \n  </table>\n</div>\n\n<div bsModal #editBrand=\"bs-modal\" class=\"modal fade\" tabindex=\"-1\"\n     role=\"dialog\" aria-labelledby=\"dialog-sizes-name1\">\n  <div class=\"modal-dialog modal-lg\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h4 id=\"dialog-sizes-name1\" class=\"modal-title pull-left\">Alterar/Criar Marca</h4>\n        <button type=\"button\" class=\"close pull-right\" (click)=\"closeModal(editBrand)\" aria-label=\"Close\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <form [formGroup]=\"registerForm\">\n          <div class=\"form-row\">\n            <div class=\"form-group col-md-6\">\n              <label>Nome da Marca</label>\n              <input type=\"text\" class=\"form-control\"\n               [ngClass]=\"{'is-invalid': registerForm.get('nome').errors && registerForm.get('nome').touched}\"\n               formControlName=\"nome\" placeholder=\"ex: Volkswagem\">\n              <div class=\"invalid-feedback\">\n                O nome da marca é obrigatório.\n              </div>\n            </div>\n            <div class=\"form-group col-md-6\">\n              <label>País de Origem</label>\n              <input type=\"text\" class=\"form-control\"\n               [ngClass]=\"{'is-invalid': registerForm.get('pais').errors && registerForm.get('pais').touched}\" \n               formControlName=\"pais\" placeholder=\"ex: Alemanha\">\n              <div class=\"invalid-feedback\">\n                O país de origem da marca é obrigatório.\n              </div>\n            </div>\n          </div>  \n        </form>\n      </div>\n      <div class=\"modal-footer\">\n        <button class=\"btn btn-secondary\" (click)=\"closeModal(editBrand)\">\n          Fechar\n        </button>\n        <button class=\"btn btn-success\" [disabled]=\"!registerForm.valid\" (click)=\"salvarAlteracao(editBrand)\">\n          Salvar Alterações\n        </button>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  titulo = 'Login';\r\n  model: any = {};\r\n\r\n  constructor(private authService: AuthService,\r\n              public router: Router,\r\n              private toastr: ToastrService) { }\r\n\r\n  ngOnInit() {\r\n    if (localStorage.getItem('token') != null) {\r\n      this.router.navigate(['/dashboard']);\r\n    }\r\n  }\r\n\r\n  login() {\r\n    this.authService.login(this.model)\r\n      .subscribe(\r\n        () => {\r\n          this.router.navigate(['/dashboard']);\r\n          this.toastr.success('Logado com Sucesso');\r\n        },\r\n        error => {\r\n          this.toastr.error('Falha ao tentar Logar');\r\n        }\r\n      );\r\n  }\r\n\r\n}\r\n","<app-header></app-header>\r\n\r\n<body class=\"text-center\" data-gr-c-s-loaded=\"true\">\r\n  <form class=\"form-signin\" #loginForm=\"ngForm\">\r\n    <img class=\"mb-4\" src=\"\" alt=\"\" width=\"72\" height=\"72\">\r\n    <h1 class=\"h3 mb-3 font-weight-normal\">Por favor</h1>\r\n    <label for=\"username\" class=\"sr-only\">Usuário</label>\r\n    <input type=\"email\" id=\"username\" class=\"form-control\" placeholder=\"Usuário\" name=\"username\" required\r\n      [(ngModel)]=\"model.username\">\r\n    <label for=\"password\" class=\"sr-only\">Password</label>\r\n    <input type=\"password\" id=\"password\" class=\"form-control\" placeholder=\"Senha\" name=\"password\" required\r\n      [(ngModel)]=\"model.password\">\r\n    <button [disabled]=\"!loginForm.valid\" class=\"btn btn-lg btn-primary btn-block\" type=\"submit\" onclick=\"login()\">Entrar</button>\r\n    <p class=\"mt-5 mb-3 text-muted\">Não tem login? Cadastre-se abaixo</p>\r\n    <button class=\"btn btn-lg btn-link btn-block\" (click)=\"router.navigate(['/user/registration'])\">Quero me\r\n      cadastrar</button>\r\n  </form>\r\n\r\n</body>","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { User } from 'src/app/models/User';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-registration',\r\n  templateUrl: './registration.component.html',\r\n  styleUrls: ['./registration.component.css']\r\n})\r\nexport class RegistrationComponent implements OnInit {\r\n\r\n  registerForm: FormGroup;\r\n  user: User;\r\n\r\n  constructor(private authService: AuthService\r\n    ,         public router: Router\r\n    ,         public fb: FormBuilder\r\n    ,         private toastr: ToastrService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.validation();\r\n  }\r\n\r\n  validation() {\r\n    this.registerForm = this.fb.group({\r\n      email: ['', [Validators.required, Validators.email]],\r\n      userName: ['', Validators.required],\r\n      passwords: this.fb.group({\r\n        password: ['', [Validators.required, Validators.minLength(4)]],\r\n        confirmPassword: ['', Validators.required]\r\n      }, { validator: this.compararSenhas })\r\n    });\r\n  }\r\n\r\n  compararSenhas(fb: FormGroup) {\r\n    const confirmSenhaCtrl = fb.get('confirmPassword');\r\n    if (confirmSenhaCtrl.errors == null || 'mismatch' in confirmSenhaCtrl.errors) {\r\n      if (fb.get('password').value !== confirmSenhaCtrl.value) {\r\n        confirmSenhaCtrl.setErrors({ mismatch: true });\r\n      } else {\r\n        confirmSenhaCtrl.setErrors(null);\r\n      }\r\n    }\r\n  }\r\n\r\n  cadastrarUsuario() {\r\n    if (this.registerForm.valid) {\r\n      this.user = Object.assign(\r\n        { password: this.registerForm.get('passwords.password').value },\r\n        this.registerForm.value);\r\n      this.authService.register(this.user).subscribe(\r\n        () => {\r\n          this.router.navigate(['/user/login']);\r\n          this.toastr.success('Cadastro Realizado');\r\n        }, error => {\r\n          const erro = error.error;\r\n          erro.forEach(element => {\r\n            switch (element.code) {\r\n              case 'DuplicateUserName':\r\n                this.toastr.error('Cadastro Duplicado!');\r\n                break;\r\n              default:\r\n                this.toastr.error(`Erro no Cadatro! CODE: ${element.code}`);\r\n                break;\r\n            }\r\n          });\r\n        }\r\n\r\n      );\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"row mt-4\">\r\n  <div class=\"col-md-6\" style=\"height: 450px;\">\r\n    <div class=\"row col-md-12 my-auto side-heder\">\r\n      <h1>Cadastro de Usuário</h1>\r\n    </div>\r\n  </div>\r\n  <div class=\"col-md-6\">\r\n    <form [formGroup]=\"registerForm\">\r\n      <div class=\"form-group\">\r\n        <label for=\"\">Email:</label>\r\n        <input class=\"form-control\" type=\"text\" formControlName=\"email\" [ngClass]=\"{ 'is-invalid': registerForm.get('email').errors && \r\n                                     registerForm.get('email').touched}\" placeholder=\"Insira o Nome Completo\" />\r\n        <div *ngIf=\"registerForm.get('email').hasError('required') &&\r\n                    registerForm.get('email').touched\" class=\"invalid-feedback\">\r\n          email é obrigatório.\r\n        </div>\r\n        <div *ngIf=\"registerForm.get('email').hasError('email')\r\n        && registerForm.get('email').touched\" class=\"invalid-feedback\">\r\n          Deve ser um e-mail válido.\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"\">Usuario:</label>\r\n        <input class=\"form-control\" type=\"text\" formControlName=\"userName\" [ngClass]=\"{'is-invalid': registerForm.get('userName').errors &&\r\n                                    registerForm.get('userName').touched}\" placeholder=\"Insira o nome de Usuário\" />\r\n        <div *ngIf=\"registerForm.get('userName').hasError('required') &&\r\n                    registerForm.get('userName').touched\" class=\"invalid-feedback\">\r\n          Usuário é obrigatório.\r\n        </div>\r\n      </div>\r\n      <div formGroupName=\"passwords\">\r\n        <div class=\"form-group\">\r\n          <label for=\"\">Senha:</label>\r\n          <input class=\"form-control\" type=\"password\" formControlName=\"password\" [ngClass]=\"{ 'is-invalid': registerForm.get('passwords.password').errors &&\r\n                                       registerForm.get('passwords.password').touched}\"\r\n            placeholder=\"Digite uma Senha\" />\r\n          <div *ngIf=\"registerForm.get('passwords.password').hasError('minlength') &&\r\n            registerForm.get('passwords.password').touched\" class=\"invalid-feedback\">\r\n            Deve conter no mínimo 4 caracters\r\n          </div>\r\n          <div *ngIf=\"registerForm.get('passwords.password').hasError('required') &&\r\n                      registerForm.get('passwords.password').touched\" class=\"invalid-feedback\">\r\n            Senha é obrigatório.\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"\">Confirmar Senha:</label>\r\n          <input class=\"form-control\" type=\"password\" formControlName=\"confirmPassword\" [ngClass]=\"{ 'is-invalid': registerForm.get('passwords.confirmPassword').errors \r\n                         && registerForm.get('passwords.confirmPassword').touched \r\n                         ||registerForm.get('passwords.confirmPassword').hasError('mismatch') \r\n                         && registerForm.get('passwords.confirmPassword').touched }\" placeholder=\"Confirme a Senha\" />\r\n          <div *ngIf=\"registerForm.get('passwords.confirmPassword').hasError('required') &&\r\n                      registerForm.get('passwords.confirmPassword').touched\" class=\"invalid-feedback\">\r\n            Confirme a Senha\r\n          </div>\r\n          <div *ngIf=\"registerForm.get('passwords.confirmPassword').hasError('mismatch') \r\n                      && registerForm.get('passwords.confirmPassword').touched\" class=\"invalid-feedback\">\r\n            Confirmação não confere\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-row\">\r\n        <div class=\"form-group col-md-8 offset-md-2\">\r\n          <button class=\"btn btn-lg btn-success btn-block\" [disabled]=\"!registerForm.valid\"\r\n            (click)=\"cadastrarUsuario()\">Registar</button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-user',\r\n  templateUrl: './user.component.html',\r\n  styleUrls: ['./user.component.css']\r\n})\r\nexport class UserComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n  <div class=\"col-md-8 offset-md-2\">\r\n    <router-outlet></router-outlet>\r\n  </div>\r\n</div>","import { Component, OnInit, TemplateRef } from '@angular/core';\nimport { VehicleService } from '../../services/vehicle.service';\nimport { Vehicle } from '../../models/Vehicle';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { Brand } from 'src/app/models/Brand';\nimport { BrandService } from 'src/app/services/brand.service';\n\n@Component({\n  selector: 'app-vehicles',\n  templateUrl: './vehicles.component.html',\n  styleUrls: ['./vehicles.component.css']\n})\nexport class VehiclesComponent implements OnInit {\n\n  vehicles: Vehicle[];\n  brands: Brand[];\n  registerForm: FormGroup;\n  vehicle: Vehicle;\n  newRecord: boolean;\n  selectedBrand: Brand;\n\n  constructor(\n    private vehicleService: VehicleService,\n    private brandService: BrandService,\n    private fb: FormBuilder,\n    private toastr: ToastrService\n  ) { }\n\n  ngOnInit() {\n    this.getVehicles();\n    this.getBrands();\n    this.validation();\n  }\n\n  getBrands() {\n    this.brandService.getAllBrands().subscribe(\n    (brands: Brand[]) => {\n      this.brands = brands;\n    }, error => {\n      console.log(error);\n    });\n  }\n\n  getVehicles() {\n    this.vehicleService.getAllVehicles().subscribe(\n    (vehicles: Vehicle[]) => {\n      this.vehicles = vehicles;\n    }, error => {\n      console.log(error);\n    });\n  }\n\n  openModalEdit(template: any, vehicle: Vehicle){\n    this.newRecord = false;\n    this.registerForm.reset();\n    template.show();\n    this.vehicle = vehicle;\n    this.registerForm.patchValue(vehicle);\n  }\n\n  closeModal(template: any){\n    template.hide();\n  }\n\n  openModal(template: any){\n    this.newRecord = true;\n    this.registerForm.reset();\n    template.show();\n  }\n\n  validation() {\n    this.registerForm = this.fb.group({\n      modelName: ['', [Validators.required, Validators.minLength(2)]],\n      modelSpecification: ['', [Validators.required, Validators.minLength(1)]],\n      bodytype: ['', []],\n      engineDisplacement: ['', []],\n      engineSpecification: ['', []],\n      brandId: ['', [Validators.required]]\n    });\n  }\n\n  salvarAlteracao(template: any) {\n    if (this.registerForm.valid) {\n      if (this.newRecord){\n        this.vehicle = Object.assign({}, this.registerForm.value);\n        console.log(this.vehicle);\n        this.vehicleService.postVehicle(this.vehicle).subscribe(\n          (newVehicle: Vehicle) => {\n            template.hide();\n            this.getVehicles();\n            this.toastr.success('Registro gerado com sucesso!');\n          }, error => {\n            console.log(error);\n            this.toastr.error('Erro ao inserir o registro!');\n          }\n        );\n      }\n      else{\n        this.vehicle = Object.assign({id: this.vehicle.id}, this.registerForm.value);\n        this.vehicleService.putVehicle(this.vehicle).subscribe(\n          (newVehicle: Vehicle) => {\n            template.hide();\n            this.getVehicles();\n            this.toastr.success('Registro alterado com sucesso!');\n          }, error => {\n            console.log(error);\n            this.toastr.error('Erro ao alterar o registro!');\n          }\n        );\n      }\n    }\n  }\n\n  excluirRegistro(id: string) {\n    this.vehicleService.deleteVehicle(id).subscribe(\n      result => {\n        this.getVehicles();\n        this.toastr.success('Registro excluído com sucesso!');\n      }, error => {\n        console.log(error);\n        this.toastr.error('Erro ao excluir o registro!');\n      }\n    );\n  }\n\n  findBrandInList(id: string) {\n    if (this.brands){\n      return this.brands.find(locate => locate.id === id).nome;\n    }\n    else{\n      return '';\n    }\n  }\n\n}\n","<div>\n  <div class=\"row\">\n    <div class=\"col-lg-4\">\n      <h3>Veículos:</h3>\n    </div>\n    <div class=\"col-lg-4\"></div>\n    <div class=\"col-lg-4\">\n      <div class=\"form-inline mr-right\">\n        <button class=\"btn btn-outline-primary\" (click)=\"openModal(editVehicle)\">\n          <i class=\"fas fa-plus-circle\"></i>\n          Novo Veículo\n        </button>\n      </div>\n    </div>\n  </div>\n  <div class=\"form-inline mr-auto\"></div>\n  <table class=\"table table-striped\">\n    <thead>\n      <tr>\n        <th scope=\"col\">Fabricante</th>\n        <th scope=\"col\">Nome do modelo</th>\n        <th scope=\"col\">Especificação do modelo</th>\n        <th scope=\"col\">Cilindrada do motor</th>\n        <th scope=\"col\">Tipo de carroceria</th>\n        <th scope=\"col\">Especificação do motor</th>\n        <th></th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let vehicle of vehicles\">\n        <th scope=\"row\">{{ findBrandInList(vehicle.brandId) }}</th>\n        <td>{{ vehicle.modelName }}</td>\n        <td>{{ vehicle.modelSpecification }}</td>\n        <td>{{ vehicle.engineDisplacement }}</td>\n        <td>{{ vehicle.bodytype }}</td>\n        <td>{{ vehicle.engineSpecification }}</td>\n        <td>\n          <div class=\"btn-group\">\n            <button class=\"btn btn-sm btn-warning\" tooltip=\"Editar\" (click)=\"openModalEdit(editVehicle, vehicle)\">\n              <i class=\"fas fa-edit\"></i>\n            </button>\n            <button class=\"btn btn-sm btn-danger\" tooltip=\"Excluir\" (click)=\"excluirRegistro(vehicle.id)\">\n              <i class=\"fas fa-eraser\"></i>\n            </button>\n          </div>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</div>\n\n<div bsModal #editVehicle=\"bs-modal\" class=\"modal fade\" tabindex=\"-1\" role=\"dialog\"\n  aria-labelledby=\"dialog-sizes-name1\">\n  <div class=\"modal-dialog modal-lg\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h4 id=\"dialog-sizes-name1\" class=\"modal-title pull-left\">Alterar/Criar veículo</h4>\n        <button type=\"button\" class=\"close pull-right\" (click)=\"closeModal(editVehicle)\" aria-label=\"Close\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <form [formGroup]=\"registerForm\">\n          <div class=\"form-row\">\n            <div class=\"form-group col-md-4\">\n              <label>Nome do modelo</label>\n              <input type=\"text\" class=\"form-control\"\n                [ngClass]=\"{'is-invalid': registerForm.get('modelName').errors && registerForm.get('modelName').touched}\"\n                formControlName=\"modelName\" placeholder=\"ex: Civic\">\n              <div class=\"invalid-feedback\">\n                O nome do modelo é obrigatório.\n              </div>\n            </div>\n            <div class=\"form-group col-md-4\">\n              <label>Especificação do modelo</label>\n              <input type=\"text\" class=\"form-control\"\n                [ngClass]=\"{'is-invalid': registerForm.get('modelSpecification').errors && registerForm.get('modelSpecification').touched}\"\n                formControlName=\"modelSpecification\" placeholder=\"ex: EXS VTEC\">\n              <div class=\"invalid-feedback\">\n                A especificação do modelo é obrigatório.\n              </div>\n            </div>\n            <div class=\"form-group col-md-4\">\n              <label>Tipo da carroceria</label>\n              <input type=\"text\" class=\"form-control\" formControlName=\"bodytype\" placeholder=\"ex: Sedã, Coupe, Hatch\">\n            </div>\n          </div>\n          <div class=\"form-row\">\n            <div class=\"form-group col-md-3\">\n              <label>Cilindrada do motor</label>\n              <input type=\"number\" class=\"form-control\" formControlName=\"engineDisplacement\" placeholder=\"ex: 2000 (2.0)\">\n            </div>\n            <div class=\"form-group col-md-6\">\n              <label>Tipo do motor</label>\n              <input type=\"text\" class=\"form-control\" formControlName=\"engineSpecification\"\n                placeholder=\"ex: 4 em linha aspirado, v6 supercharged\">\n            </div>\n            <div class=\"form-group col-md-3\">\n              <label>Fabricante/Marca</label>\n              <select\n                [ngClass]=\"{'is-invalid': registerForm.get('brandId').errors && registerForm.get('brandId').touched}\"\n                class=\"custom-select form-control\" formControlName=\"brandId\">\n                <option *ngFor=\"let brand of brands\" value=\"{{brand.id}}\">{{brand.nome}}</option>\n              </select>\n              <div class=\"invalid-feedback\">\n                A seleção de um fabricante é obrigatória\n              </div>\n            </div>\n          </div>\n        </form>\n      </div>\n      <div class=\"modal-footer\">\n        <button class=\"btn btn-secondary\" (click)=\"closeModal(editVehicle)\">\n          Fechar\n        </button>\n        <button class=\"btn btn-success\" [disabled]=\"!registerForm.valid\" (click)=\"salvarAlteracao(editVehicle)\">\n          Salvar Alterações\n        </button>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../services/auth.service';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor(public authService: AuthService\n            , public router: Router\n            , private toastr: ToastrService) { }\n\n  ngOnInit() {\n  }\n\n  loggedIn() {\n    return this.authService.loggedIn();\n  }\n\n  entrar() {\n    this.router.navigate(['/user/login']);\n  }\n\n  logout() {\n    localStorage.removeItem('token');\n    this.toastr.show('Log Out');\n    this.router.navigate(['/user/login']);\n  }\n\n}\n","<nav class=\"navbar navbar-expand-lg navbar-dark bg-dark fixed-top\">\n  <div class=\"container\">\n    <a class=\"navbar-brand\" href=\"#\">Controle automotivo</a>\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarResponsive\" aria-controls=\"navbarResponsive\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    <div class=\"collapse navbar-collapse\" id=\"navbarResponsive\">\n      <ul class=\"navbar-nav ml-auto\">\n        <li class=\"nav-item active\">\n          <a class=\"nav-link\" routerLink=\"\">Home\n            <span class=\"sr-only\">(current)</span>\n          </a>\n        </li>\n        <li class=\"nav-item\" *ngIf=\"!loggedIn()\">\n          <a class=\"nav-link\" routerLink=\"#\">Login</a>\n        </li>\n        <li class=\"nav-item\" *ngIf=\"loggedIn()\">\n          <a class=\"nav-link\" routerLink=\"brands\">marcas</a>\n        </li>\n        <li class=\"nav-item\" *ngIf=\"loggedIn()\">\n          <a class=\"nav-link\" routerLink=\"vehicles\">veículos</a>\n        </li>\n        <li class=\"nav-item\" *ngIf=\"loggedIn()\">\n          <a class=\"nav-link\" routerLink=\"advertisements\">anúncios</a>\n        </li>\n      </ul>\n    </div>\n  </div>\n</nav>","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Advertisement } from '../models/Advertisement';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdvertisementService {\n  baseUrl: string = environment.baseUrl + 'Advertisements/';\n  constructor(private http: HttpClient) { }\n\n  getAllAdvertisements(): Observable<Advertisement[]> {\n    return this.http.get<Advertisement[]>(this.baseUrl);\n  }\n\n  getAdvertisementById(id: string): Observable<Advertisement> {\n    return this.http.get<Advertisement>(this.baseUrl + id);\n  }\n\n  postAdvertisement(advertisement: Advertisement){\n    console.log(this.baseUrl);\n    return this.http.post(this.baseUrl, advertisement);\n  }\n\n  putAdvertisement(advertisement: Advertisement){\n    console.log(advertisement);\n    console.log(advertisement.id);\n    return this.http.put(this.baseUrl + advertisement.id, advertisement);\n  }\n\n  deleteAdvertisement(id: string){\n    return this.http.delete(this.baseUrl + id);\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n\r\n  baseURL = 'http://localhost:5000/api/user/';\r\n  jwtHelper = new JwtHelperService();\r\n  decodedToken: any;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  login(model: any) {\r\n    return this.http\r\n      .post(`${this.baseURL}login`, model).pipe(\r\n        map((response: any) => {\r\n          const user = response;\r\n          if (user) {\r\n            localStorage.setItem('token', user.token);\r\n            this.decodedToken = this.jwtHelper.decodeToken(user.token);\r\n            sessionStorage.setItem('username', this.decodedToken.unique_name);\r\n          }\r\n        })\r\n      );\r\n  }\r\n\r\n  register(model: any) {\r\n    return this.http.post(`${this.baseURL}register`, model);\r\n  }\r\n\r\n  loggedIn() {\r\n    const token = localStorage.getItem('token');\r\n    return !this.jwtHelper.isTokenExpired(token);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { Observable } from 'rxjs';\nimport { Brand } from '../models/Brand';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BrandService {\n  baseUrl: string = environment.baseUrl + 'Brands/';\n  constructor(private http: HttpClient) { }\n\n  getAllBrands(): Observable<Brand[]> {\n    return this.http.get<Brand[]>(this.baseUrl);\n  }\n\n  getBrandById(id: string): Observable<Brand> {\n    return this.http.get<Brand>(this.baseUrl + id);\n  }\n\n  postBrand(brand: Brand){\n    return this.http.post(this.baseUrl, brand);\n  }\n\n  putBrand(brand: Brand){\n    console.log(brand);\n    console.log(brand.id);\n    return this.http.put(this.baseUrl + brand.id, brand);\n  }\n\n  deleteBrand(id: string){\n    return this.http.delete(this.baseUrl + id);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Vehicle } from '../models/Vehicle';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class VehicleService {\n\n  baseUrl: string = environment.baseUrl + 'Vehicles/';\n  constructor(private http: HttpClient) { }\n\n  getAllVehicles(): Observable<Vehicle[]> {\n    return this.http.get<Vehicle[]>(this.baseUrl);\n  }\n\n  getVehicleById(id: string): Observable<Vehicle> {\n    return this.http.get<Vehicle>(this.baseUrl + id);\n  }\n\n  postVehicle(vehicle: Vehicle){\n    return this.http.post(this.baseUrl, vehicle);\n  }\n\n  putVehicle(vehicle: Vehicle){\n    console.log(vehicle);\n    console.log(vehicle.id);\n    return this.http.put(this.baseUrl + vehicle.id, vehicle);\n  }\n\n  deleteVehicle(id: string){\n    return this.http.delete(this.baseUrl + id);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  baseUrl: 'http://localhost:5000/api/'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}